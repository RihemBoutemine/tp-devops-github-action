name: CI devops 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build and test with Maven
        run: mvn clean verify --file ./simple-api/pom.xml

      - name: SonarCloud Analysis
        working-directory: ./simple-api
        run: |
          mvn -B verify sonar:sonar \
          -Dsonar.projectKey=RihemBoutemine_tp-devops-github-action \
          -Dsonar.organization=rihemboutemine \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./simple-api
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: true

      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          context: ./database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-db:latest
          push: true

      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          context: ./http-server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: true
  deploy:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Copy SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Disable SSH host key checking
        run: |
          echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      - name: Write Ansible Vault password
        run: echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ~/.vault_pass.txt

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventories/setup.yml ansible/playbook.yml \
            --vault-password-file ~/.vault_pass.txt \
            -e "image_tag=${{ github.run_number }}"
